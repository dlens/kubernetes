global:
  imagePullSecrets:
  - regcred
  annotations: {}
  podAnnotations: {} 
  serviceAccount:
    create: false

# Enable or disable decision lens analytic services
analytics:
  pendo: true
  google: true

ingress:
  ingressClassName: nginx
  dlx:
    annotations: {}
    tls: []
    hosts:
    - host: dlx
      paths:
      - path: "/v1"
        pathType: Prefix
        serviceName: apigateway-service
        port: 9005
      - path: "/oauth/callback"
        pathType: Prefix
        serviceName: dlxui-service
        port: 8089
      - path: "/oauth"
        pathType: Prefix
        serviceName: apigateway-service
        port: 9005
      - path: "/.*-service"
        pathType: Prefix
        serviceName: apigateway-service
        port: 9005
      - path: "/"
        pathType: Prefix
        serviceName: dlxui-service
        port: 8089
  dlc:
    annotations: {}
    tls: []
    hosts:
    - host: dlc
      paths:
      - path: "/dl3-service-.*"
        pathType: Prefix
        serviceName: dlc-service
        port: 8080
      - path: "/dlm-service"
        pathType: Prefix
        serviceName: dlc-service
        port: 8080
      - path: "/"
        pathType: Prefix
        serviceName: dlcui-service
        port: 8080

service:
  image:
    url: 723504183657.dkr.ecr.us-east-1.amazonaws.com
  integration:
    tag: decisionlens_downloads:integration-service_5.6.3
    port: 9000
    url: http://integration-service:9000
    replicas: 1
    labels: {}
    selectorLabels: {}
    podAnnotations: {}
    extraEnv: []
    extraVolumes: []
    extraVolumeMounts: []
    resources:
      requests:
        memory: "1000Mi"
        cpu: "1000m"
      limits:
        memory: "4000Mi"
        cpu: "2000m"
  portfolio:
    tag: decisionlens_downloads:portfolio-service_9.10.1
    port: 9001
    url: http://portfolio-service:9001
    replicas: 1
    labels: {}
    selectorLabels: {}
    podAnnotations: {}
    extraEnv: []
    extraVolumes: []
    extraVolumeMounts: []
    resources:
      limits:
        memory:  "1500Mi"
        cpu: "1000m"
      requests:
        memory: "1000Mi"
        cpu: "1000m"
  plan:
    tag: decisionlens_downloads:plan-service_5.6.2
    port: 9003
    url: http://plan-service:9003
    replicas: 1
    labels: {}
    selectorLabels: {}
    podAnnotations: {}
    resources:
      limits:
        memory:  "8000Mi"
        cpu: "4000m"
      requests:
        memory: "2000Mi"
        cpu: "2000m"
    extraEnv: []
    extraVolumes: []
    extraVolumeMounts: []
  messaging:
    tag: decisionlens_downloads:messaging-service_3.21.1
    port: 9004
    url: http://messaging-service:9004
    replicas: 1
    labels: {}
    selectorLabels: {}
    podAnnotations: {}
    resources:
      limits:
        memory:  "4000Mi"
        cpu: "2000m"
      requests:
        memory: "1000Mi"
        cpu: "1000m"
    extraEnv: []
    extraVolumes: []
    extraVolumeMounts: []
  apigateway:
    tag: decisionlens_downloads:apigateway-service_7.2.0
    version: master
    port: 9005
    url: http://apigateway-service:9005
    replicas: 1
    labels: {}
    selectorLabels: {}
    podAnnotations: {}
    resources:
      limits:
        memory: "500Mi"
        cpu: "1000m"
      requests:
        memory: "250Mi"
        cpu: "100m"
    extraEnv: []
    extraVolumes: []
    extraVolumeMounts: []
  auth:
    tag: decisionlens_downloads:auth-service_6.5.1
    port: 9006
    url: http://auth-service:9006
    replicas: 1
    labels: {}
    selectorLabels: {}
    podAnnotations: {}
    extraEnv: []
    resources:
      limits:
        memory: "2000Mi"
        cpu: "1000m"
      requests:
        memory: "1200Mi"
        cpu: "100m"
    extraVolumes: []
    extraVolumeMounts: []
  dlxui:
    tag: decisionlens_downloads:dlx-ui_11.2.0
    port: 8089
    replicas: 1
    labels: {}
    selectorLabels: {}
    podAnnotations: {}
    resources:
      limits:
        memory: "4000Mi"
        cpu: "2000m"
      requests:
        memory: "1000Mi"
        cpu: "1000m"
    extraEnv: []
    extraVolumes: []
    extraVolumeMounts: []
  dlc:
    tag: decisionlens_downloads:dlc-service_1.24.1
    port: 8080
    url: http://dlc-service:8080
    replicas: 1
    labels: {}
    selectorLabels: {}
    annotations: {}
    extraEnv: []
    resources:
      limits:
        memory: "8000Mi"
        cpu: "4000m"
      requests:
        memory: "2000Mi"
        cpu: "2000m"
    extraVolumes: []
    extraVolumeMounts: []
  dlcui:
    tag: decisionlens_downloads:dlc-ui_1.24.1
    port: 8088
    replicas: 1
    labels: {}
    selectorLabels: {}
    podAnnotations: {}
    extraEnv: []
    resources:
      limits:
        memory:  "4000Mi"
        cpu: "2000m"
      requests:
        memory: "1000Mi"
        cpu: "1000m"
    extraVolumes: []
    extraVolumeMounts: []

rabbitmq:
  image: 723504183657.dkr.ecr.us-east-1.amazonaws.com/decisionlens_downloads:rabbitmq_3.13.7
  resources:
    limits:
      memory: "250Mi"
      cpu: "100m"
    requests:
      memory: "125Mi"
      cpu:  "50m"
  host: rabbitmq-service
  port: 5672
  stompPort: 61613
  username: guest
  password: guest
  service:
    type: LoadBalancer
  podAnnotations: {}
  labels: {}
  selectorLabels: {}
  extraEnv: []
  extraVolumes: []
  extraVolumeMounts: []

database:
  host: 10.0.0.17
  port: 33306
  username: root
  password: dl
  dlc: dl3
  jdbc:
    options:
      - useSSL=false
      - rewriteBatchedStatements=true

mail:
  auth: true
  host: smtp.gmail.com
  port: 587
  username: "changeme"
  password: "changeme"

memcached:
  servers: 10.0.0.17:11211

elastic:
  server:
    url: http://10.0.0.17:9200

license:
  key: "changeme"

jwt:
  secret: 6rILDDQjA-0yqrfH_9t2Cz8AJ2xH_Zs9l8v5k8RyQaI
  issuer: https://api.decisionlens.com
  publicKey:
  privateKey:

dlx:
  api:
    url: http://dlx
  ui:
    clientId: 34b1832e-1c97-422a-b99e-7f8d2d66348f

access:
  token:
    header: Authorization

