kind: Deployment
apiVersion: apps/v1
metadata: 
  name: dlxui-deployment
  labels:
    app: dlxui
    {{- include "decisionlens.labels.standard" . | nindent 4 }}
  annotations:
  {{- with .Values.global.annotations }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.service.dlxui.replicas }}
  selector:
    matchLabels:
      app: dlxui
      {{- include "decisionlens.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: dlxui
        {{- include "decisionlens.selectorLabels" . | nindent 8 }}
      annotations:
      {{- with .Values.global.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      containers:
      - name: dlxui
        image: {{ .Values.service.image.url }}/{{ .Values.service.dlxui.tag }}
        resources:
          requests:
            memory: "1000Mi"
            cpu: "1000m"
          limits:
            memory: "4000Mi"
            cpu: "2000m"
        ports:
        - containerPort: {{ .Values.service.dlxui.port }}
        env:
        - name: SERVICE_URL_APIGATEWAY
          valueFrom:
            configMapKeyRef:
               name: {{ .Release.Name }}-configmap
               key: apigateway-service-url
        volumeMounts:
        - name: dlxui-config-volume
          mountPath: /wfConfig 
      volumes:
      - name: dlxui-config-volume
        configMap: 
          name: {{ .Release.Name }}-configmap
          items: 
          - key: config.json
            path: config.json
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: dlxui-service
      {{- end }}
      imagePullSecrets:
      {{- with .Values.global.imagePullSecrets }}
      {{- toYaml . | nindent 6 }}
      {{- end }}

