kind: Deployment
apiVersion: apps/v1
metadata: 
  name: messaging-deployment
  labels:
    app: messaging
    {{- include "decisionlens.labels" . | nindent 4 }}
  {{- with .Values.service.messaging.labels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  annotations:
  {{- with .Values.global.annotations }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.service.messaging.annotations }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.service.messaging.replicas }}
  selector:
    matchLabels:
      app: messaging
      {{- include "decisionlens.selectorLabels" . | nindent 6 }}
    {{- with .Values.service.messaging.selectorLabels }}
      {{- toYaml . | nindent 6 }}
    {{- end }}
  template:
    metadata:
      labels:
        app: messaging
        {{- include "decisionlens.selectorLabels" . | nindent 8 }}
      {{- with .Values.service.messaging.selectorLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      annotations:
      {{- with .Values.global.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.service.messaging.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{ if .Values.jwt.publicKey }}
      volumes:
      - name: jwt-keys-volume
        secret:
          secretName: jwt-keys-secret
      {{ end }}
      containers:
      - name: messaging
        image: {{ .Values.service.image.url }}/{{ .Values.service.messaging.tag }}
        resources:
          requests:
            memory: "1000Mi"
            cpu: "1000m"
          limits:
            memory: "4000Mi"
            cpu: "2000m"
        ports:
        - containerPort: {{ .Values.service.messaging.port }}    
        imagePullPolicy: Always
        {{ if .Values.jwt.publicKey }}
        volumeMounts:
        - name: jwt-keys-volume
          readOnly: true
          mountPath: /jwt-keys
        {{ end }}
        env:        
        - name: service.url.apigateway
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: apigateway-service-url       
        - name: cacheServers
          valueFrom:
            configMapKeyRef: 
              name: {{ .Release.Name }}-configmap
              key: memcached-service-url
        - name: elastic.server
          valueFrom:
            configMapKeyRef: 
              name: {{ .Release.Name }}-configmap
              key: elastic-service-url
        - name: jwt.secret
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secret
              key: jwt-secret
        - name: spring.rabbitmq.host
          valueFrom: 
            configMapKeyRef: 
              name: {{ .Release.Name }}-configmap
              key: rabbitmq-host
        - name: spring.rabbitmq.username
          valueFrom: 
            secretKeyRef: 
              name: {{ .Release.Name }}-secret
              key: rabbitmq-username
        - name: spring.rabbitmq.password
          valueFrom: 
            secretKeyRef: 
              name: {{ .Release.Name }}-secret
              key: rabbitmq-password
        - name: DL_LICENSE_KEY
          valueFrom: 
            secretKeyRef: 
              name: {{ .Release.Name }}-secret
              key: dl-license-key
        - name: spring.mail.host
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: mail-host
        - name: spring.mail.port
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: mail-port
        - name: spring.mail.username
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secret
              key: mail-username
        - name: spring.mail.password
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secret
              key: mail-password
        - name: spring.mail.properties.mail.smtp.auth
          valueFrom:
             configMapKeyRef:
               name: {{ .Release.Name }}-configmap
               key: mail-auth
        - name: access.token.header
          valueFrom:
            configMapKeyRef:
               name: {{ .Release.Name }}-configmap
               key: access-token-header
        {{ if .Values.jwt.publicKey }}
        - name: jwt.privateKey
          value: /jwt-keys/private_key.pk8
        - name: jwt.publicKey
          value: /jwt-keys/public_key.pub
        {{ end }}
      {{- if .Values.global.serviceAccount.create }}
      serviceAccountName: messaging-service
      {{- end }}
      imagePullSecrets:
      {{- with .Values.global.imagePullSecrets }}
      {{- toYaml . | nindent 6 }}
      {{- end }}


